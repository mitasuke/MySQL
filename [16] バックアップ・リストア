データベースの全ての内容を書き出すことを「ダンプする」と言う。
バックアップしたデータをデータベースに戻すことを「リストアする」と言う。


★データベースをダンプする。　（コマンドプロンプトやターミナルで実行する）
mysqldump -u ユーザ名 -pパスワード データベース名 > 出力ファイル名;

例：
データベースdb1のダンプを /tmp/db1_out.txt に出力する。
# mysqldump -u root -pパスワード db1 > /tmp/db1_out.txt

ファイルがあるか確認。
# ls /tmp/
csv.bat  db1_out.txt  out2.csv  out.csv  sql.txt

内容を確認するとdb1のダンプが取得できていることがわかる。（db1を再作成するためのSQL文がずらずらと書いてある）
# cat /tmp/db1_out.txt
-- MySQL dump 10.13  Distrib 5.5.42, for Linux (x86_64)
--
-- Host: localhost    Database: db1
-- ------------------------------------------------------
-- Server version       5.5.42

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
～～～省略～～～


★ダンプファイルをリストアする時、戻す先のデータベースはあらかじめ作成しておく必要がある。

★リストアもコマンドプロンプトやターミナルから実行する。

例：
事前に、ダンプを流し込む(復旧先である)データベースdb2を作成しておく。
# mysqladmin -u root -pパスワード create db2

リストアを開始。
# mysql -u root -pパスワード db2 < /tmp/db1_out.txt

MySQLにログインして、db2が存在することを確認。
mysql> show databases;
mysql> use db2
mysql> show tables;


★リストアに失敗する場合、文字コード問題が絡んでいる可能性がある。
　ダンプやリストアをする際に文字コードを指定しないと、デフォルトの文字コードでファイル入出力が行われる。
　なので、日本語の2バイトコードが原因となって、エラーになることがある。


★特定のテーブルだけをバックアップすることもできる。
mysqldump -u ユーザ名 -pパスワード データベース名 テーブル名 > 出力ファイル名

例：
データベースdb1のテーブルtb1をバックアップする。
# mysqldump -u root -pパスワード db1 tb1 > table.txt

バックアップファイルができたことを確認。
# ls
table.txt

バックアップファイルの中身はこんなのだった。
# cat table.txt
-- MySQL dump 10.13  Distrib 5.5.42, for Linux (x86_64)
--
-- Host: localhost    Database: db1
-- ------------------------------------------------------
-- Server version       5.5.42

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `tb1`
--

DROP TABLE IF EXISTS `tb1`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb1` (
  `bang` varchar(10) DEFAULT NULL,
  `nama` varchar(10) DEFAULT NULL,
  `tosi` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb1`
--

LOCK TABLES `tb1` WRITE;
/*!40000 ALTER TABLE `tb1` DISABLE KEYS */;
INSERT INTO `tb1` VALUES ('A101','佐藤',40),('A102','高橋',28),('A103','中川',20),('A104','渡辺',23),('A105','西沢',35);
/*!40000 ALTER TABLE `tb1` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2015-06-16 15:45:47

MySQLにログインして、tb1を削除しておく。
mysql> drop table db1.tb1;

db1の中にtb1をリストアする。
# mysql -u root -pパスワード db1 < table.txt

MySQLにログインして、tb1がリストアされていることを確認する。
mysql> show tables;
mysql> select * from tb1;

