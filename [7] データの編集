カラムのデータをすべて修正する。（普通は条件付きで実施する）
update テーブル名 set カラム名 = 設定する値;

例：
新たにカラムを作って、全てのレコードに「特記無し」と記載する。
mysql> alter table tb add bikou varchar(100);
mysql> update tb set bikou='特記なし';
mysql> select * from tb;
+------+------+------+--------------+
| bang | uria | tuki | bikou        |
+------+------+------+--------------+
| A103 |  101 |    4 | 特記なし     |　★whereで条件をつけていないので、bikouの全てに「特記なし」と挿入される。
| A102 |   54 |    5 | 特記なし     |
| A104 |  181 |    4 | 特記なし     |
| A101 |  184 |    4 | 特記なし     |
| A103 |   17 |    5 | 特記なし     |
| A101 |  300 |    5 | 特記なし     |
| A102 |  205 |    6 | 特記なし     |
| A104 |   93 |    5 | 特記なし     |
| A103 |   12 |    6 | 特記なし     |
| A107 |   87 |    6 | 特記なし     |
+------+------+------+--------------+


条件に一致したレコードだけ修正する。
update テーブル名 set カラム名 = 設定する値 where 条件;

例：
uriaが100以上のレコードだけ、bikouに「優秀」と記載する。
mysql> update tb set bikou='優秀' where uria>=100;
mysql> select * from tb;
+------+------+------+--------------+
| bang | uria | tuki | bikou        |
+------+------+------+--------------+
| A103 |  101 |    4 | 優秀         |
| A102 |   54 |    5 | 特記なし     |
| A104 |  181 |    4 | 優秀         |
| A101 |  184 |    4 | 優秀         |
| A103 |   17 |    5 | 特記なし     |
| A101 |  300 |    5 | 優秀         |
| A102 |  205 |    6 | 優秀         |
| A104 |   93 |    5 | 特記なし     |
| A103 |   12 |    6 | 特記なし     |
| A107 |   87 |    6 | 特記なし     |
+------+------+------+--------------+


uriaの値が低い3レコードについてのみ、bikouに「ガンバレ」と記載する。
mysql> update tb set bikou='ガンバレ' order by uria asc limit 3;
mysql> select * from tb;
+------+------+------+--------------+
| bang | uria | tuki | bikou        |
+------+------+------+--------------+
| A103 |  101 |    4 | 優秀         |
| A102 |   54 |    5 | ガンバレ     |
| A104 |  181 |    4 | 優秀         |
| A101 |  184 |    4 | 優秀         |
| A103 |   17 |    5 | ガンバレ     |
| A101 |  300 |    5 | 優秀         |
| A102 |  205 |    6 | 優秀         |
| A104 |   93 |    5 | 特記なし     |
| A103 |   12 |    6 | ガンバレ     |
| A107 |   87 |    6 | 特記なし     |
+------+------+------+--------------+


特定のレコードだけをコピーして新たなテーブルを作る。
mysql> create table tb_a101 select * from tb where bang='A101';

mysql> select * from tb_a101;
+------+------+------+
| bang | uria | tuki |
+------+------+------+
| A101 |  184 |    4 |　★bangがA101のレコードだけ取り出して、新たなテーブルtb_a101を作成している。
| A101 |  300 |    5 |
+------+------+------+

既に存在するテーブルに、別のテーブルから特定のレコードだけを取り出して挿入する。
mysql> insert into tb_a101 select * from tb where bang like 'A102';

mysql> select * from tb_a101;
+------+------+------+
| bang | uria | tuki |
+------+------+------+
| A101 |  184 |    4 |
| A101 |  300 |    5 |
| A102 |   54 |    5 |
| A102 |  205 |    6 |
+------+------+------+


uriaが最も高いレコードを除いて、uriaが2～5番目に高いレコードのみを集めたテーブルを作成する。
mysql> create table tb_2to5 select * from tb order by uria desc limit 4 offset 1;

mysql> select * from tb_2to5;
+------+------+------+
| bang | uria | tuki |
+------+------+------+
| A102 |  205 |    6 |　★offset は 2 ではなく 1 なので注意（何度もミスった）
| A101 |  184 |    4 |
| A104 |  181 |    4 |
| A103 |  101 |    4 |
+------+------+------+


条件に一致するレコードを削除する。
DELETE FROM テーブル名 WHERE 条件；

例：
mysql> delete from tb1k where tosi<30;
mysql> select * from tb1k;
+------+--------+------+
| bang | nama   | tosi |
+------+--------+------+
| A101 | 佐藤   |   40 |　★tosi が 30未満のレコードを削除した。
| A105 | 西沢   |   35 |
+------+--------+------+


uriaの値が上位4つのレコードのみ削除する。（並び変えてから上位4つを消している）
mysql> delete from tb_copy order by uria desc limit 4;

mysql> select * from tb_copy;
+------+------+------+
| bang | uria | tuki |
+------+------+------+
| A103 |  101 |    4 |
| A102 |   54 |    5 |
| A103 |   17 |    5 |
| A104 |   93 |    5 |
| A103 |   12 |    6 |
| A107 |   87 |    6 |
+------+------+------+


テーブルzaikoの「カラムcの値が今現在より5年前以前のレコード」を除いて新たなテーブルを作成する。
mysql> select * from zaiko;
+-----------+------+------------+
| a         | b    | c          |
+-----------+------+------------+
| 東支店    |  200 | 2004-08-08 |
| 西支店    |  500 | 2010-06-15 |
| 南支店    |  100 | 2003-02-23 |
| 北支店    |  400 | 2012-08-08 |
+-----------+------+------------+

mysql> create table new_zaiko select * from zaiko where c > now() - interval 5 year;

mysql> select * from new_zaiko;
+-----------+------+------------+
| a         | b    | c          |
+-----------+------+------------+
| 西支店    |  500 | 2010-06-15 |　★今現在＝2015/6/13　とする
| 北支店    |  400 | 2012-08-08 |
+-----------+------+------------+


